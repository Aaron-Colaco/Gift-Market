@model IEnumerable<AaronColacoAsp.NETProject.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<h1>Orders Page</h1>


@{
    //if no orders are found display no order found and show link to see products.
    if (Model.FirstOrDefault() == null)
    {
        <div style="margin: auto;">
        <h1> No Orders Found</h1>
        <p>Click Add to Cart To Create an Order.</p>
        <a asp-asp-controller="Items" asp-action="Index">See Products Here</a>
        </div>
    }
  
    else{
   
//if user is a admin display the option to serach
@if (User.IsInRole("Admin"))
{
    //Submits input of the form to the serach method.
    <form asp-action="SearchByCustomer" asp-controller="Orders">


        <h3 style="color: teal">Search Customer by name or emai</h3>
        <input name="CustomerName" type="text" placeholder="Search Customer by name or email" />

        <input type="submit" class="btn btn-primary" />
    </form>

   
       <form asp-controller="Orders" asp-action="FilterOrdersByDate">

        <h3 style="color: teal">Select Two Dates To See Orders In That Range</h3>
        @{
           //calculates the max and min dates for the form, to be one year form today and one year prior to today. 
             DateTime min = DateTime.Today.AddMonths((-12));

             DateTime max = DateTime.Today.AddMonths((12));
        } 


        <label for="Date 1">Date 1 </label>
                <!-- The input field for Date 1 -->
                <input required type="datetime-local" name="Date1" min="@min.ToString("yyyy-MM-dd")T00:00" max="@max.ToString("yyyy-MM-dd")T00:00" placeholder="00/00/000" />

        <label for="date">Date 2 </label>
                <!-- The input field for Date 2 -->
                <input required type="datetime-local" name="Date2" min="@min.ToString("yyyy-MM-dd")T00:00" max="@max.ToString("yyyy-MM-dd")T00:00"  placeholder="00/00/000" />


        <input type="submit" />
    </form>
}


<table class="table">
    <thead>
        <tr>
            <th>
                     
                <a style="color:teal"asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.OrderTime)</a>
            </th>
            <th>
              Total Price
            </th>
            <th>
            Status
            </th>
           

           
           
           
            <th></th>
        </tr>
    </thead>
   
    
    
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalPrice)
            </td>
            
            
                        @if(item.StatusId != 1 && !User.IsInRole("Admin"))
                        {
                            <td>
                                Thank you, Your Order is now @Html.DisplayFor(modelItem => item.Status.Name)
                            </td>
                        }
                        else
                        {
                            <td>  Waiting to be Checked out</td>
                        }

        <td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Customers.Email)
                    </td>
                    <td>
                        <a asp-action="StatusUpdate" asp-route-id="@item.OrderId">Update</a>
                    </td>
                }


            @if(item.Status.StatusId == 1){
                <td>
                         
                        <a asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>
        
                </td>
            }
            
            
   
         
                    @if (item.StatusId != 1)
                    {

                        <a asp-action="Details" asp-route-id="@item.OrderId">Details</a>
                            <td>
                                <a asp-controller="OrderItems" asp-route-id="@item.OrderId" asp-action="Index">See Items</a>
                             </td>
                            }
                            else
                            {
                            <td>
                                <a asp-controller="OrderItems" asp-route-id="@item.OrderId" asp-action="Index">See Items</a>
                            </td>
                            }

                       
             
            </td>
               
        </tr>
}
       

</tbody>

   

</table>


        <form asp-action="Index" style="margin-left:90%; margin-top:3%;">
            @{
                // Loop through the number of pages creating a sumbit button, starting from 1 up to the value of ViewBag.Pages
                for (int i = 1; i < ViewBag.Pages; i++)
                {
                    // Check if the current page number(i) is equal to the active page ViewBag.PageNumber
                    @if (i == ViewBag.PageNUmber)
                    {
                        // render a input submit button for the current page with value of i.
                        <input name="Page" value="@i" type="submit" style="background-color: black; color:white; text-align:center; padding: 5px 10px; border: none; border-radius: 3px; width:50%; margin:3%; text-align:center;" />


                    }
                    else
                    {
                        // Render a submit button for the pthers page with a different styling form the active page with the value of i.
                        <input name="Page" value="@i" type="submit" style="background-color: teal; color:white; padding: 5px 10px; border: none; border-radius: 3px; width:35%; margin:3%; text-align:center;" />
                    }
                }

                //When the user clicks a submit button it will pass the vlaue(page number ) to the index method.
            }
        </form>
}
}

